1) display a prompt for user to input
2) user inputs cmd with or without arguments and pipes and redirections
3) env variables should be expanded before processing
4a) if pipes
	the output of each cmd is connected to the input of the next cmd
   if redirections
	< should redirect input;
	> should redirect output;
	<< should be given a delimiter, then read the input until a line containing the
	delimiter is seen. However, it doesn’t have to update the history!
	>> should redirect output in append mode
4b) execute the cmds taking into account pipes and/redirections

I don't know how many pipes/redirections are going to be

how to handle pipes??
from StackOverflow: Each part of a Linux pipelined cmd (e.g. cat foo | wc -l) creates and runs in its own subshell (a separate process). If you need to do that using fork, then you should look at dup or dup2 so that you can control the proper redirection of output from one process to the input of another that way.

dup or dup2 - duplicates an existing process and returns the new file descriptor to the calling process. In dup2 the value for the new file descriptor is already provided

export:
	Mark each name to be passed to child processes in the environment. The return status is zero unless an invalid option is supplied, one of the names is not a valid shell variable name, or -f is supplied with a name that is not a shell function.

exit:
	Exit the shell, returning a status of n to the shell’s parent. If n is omitted, the exit status is that of the last cmd executed. Any trap on EXIT is executed before the shell terminates.

cd:
	Change the current working directory to directory. If directory is not supplied, the value of the HOME shell variable is used. Any additional arguments following directory are ignored. If the shell variable CDPATH exists, it is used as a search path: each directory name in CDPATH is searched for directory, with alternative directory names in CDPATH separated by a colon (‘:’). If directory begins with a slash, CDPATH is not used.
	If a non-empty directory name from CDPATH is used, or if ‘-’ is the first argument, and the directory change is successful, the absolute pathname of the new working directory is written to the standard output.
	The return status is zero if the directory is successfully changed, non-zero otherwise.


agile, html, python, uipath, c++, c#

> test1.txt > test2.txt echo asdjadsjadjshbnj > test3.txt | cat < test3.txt

adicionar ^C quando se fizer Ctrl+C em comandos tipo cat

echo "cat lol.c | cat > lol.c"

echo "test $USER" | cat < test.txt

echo "test $USER" >> test.txt | cat < test.txt

adicionar suporte para single quotes no set_chain

~ expandir para Home para directorios cd
